name: Android Build & Release

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Tipo de build a generar'
        required: true
        default: 'debug'
        type: choice
        options:
        - debug
        - release
        - bundle

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Cache npm dependencies
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
          
    - name: Install dependencies
      run: npm ci
      
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
      
    - name: Cache Android SDK
      uses: actions/cache@v4
      with:
        path: |
          ${{ env.ANDROID_SDK_ROOT }}
          ${{ env.ANDROID_HOME }}
        key: ${{ runner.os }}-android-sdk-${{ hashFiles('**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-android-sdk-
          
    - name: Accept Android licenses
      run: |
        yes | sdkmanager --licenses
        yes | sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.0"
        
    - name: Build Debug APK
      if: github.event.inputs.build_type == 'debug' || github.event_name == 'pull_request'
      run: |
        cd android
        chmod +x ./gradlew
        ./gradlew assembleDebug --no-daemon
        
    - name: Build Release APK
      if: github.event.inputs.build_type == 'release' || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/'))
      run: |
        cd android
        chmod +x ./gradlew
        ./gradlew assembleRelease --no-daemon
        
    - name: Build Release Bundle
      if: github.event.inputs.build_type == 'bundle' || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/'))
      run: |
        cd android
        chmod +x ./gradlew
        ./gradlew bundleRelease --no-daemon
        
    - name: Upload Debug APK
      if: github.event.inputs.build_type == 'debug' || github.event_name == 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: app-debug
        path: android/app/build/outputs/apk/debug/app-debug.apk
        
    - name: Upload Release APK
      if: github.event.inputs.build_type == 'release' || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/'))
      uses: actions/upload-artifact@v4
      with:
        name: app-release
        path: android/app/build/outputs/apk/release/app-release.apk
        
    - name: Upload Release Bundle
      if: github.event.inputs.build_type == 'bundle' || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/'))
      uses: actions/upload-artifact@v4
      with:
        name: app-release-bundle
        path: android/app/build/outputs/bundle/release/app-release.aab
        
    - name: Create Release
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        
    - name: Upload Release Assets
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: android/app/build/outputs/apk/release/app-release.apk
        asset_name: SaTalaiaTotem-${{ github.ref_name }}.apk
        asset_content_type: application/vnd.android.package-archive
        
    - name: Upload Release Bundle Assets
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: android/app/build/outputs/bundle/release/app-release.aab
        asset_name: SaTalaiaTotem-${{ github.ref_name }}.aab
        asset_content_type: application/octet-stream
